#include <stdio.h>
#include <stdlib.h>

// write your code here 
struct node{
int data;
struct node *prev;
struct node *next;
};
typedef struct node *NODE;
NODE createNodeInDLL(){
	NODE temp;
	temp=(NODE)malloc(sizeof(struct node));
	temp->prev=NULL;
	temp->next=NULL;
	return temp;
}
NODE first=NULL;
void insert(int x){
	NODE temp,lastNode=first;
	temp=createNodeInDLL();
	temp->data=x;
if(first==NULL)
		first=temp;
	else{
		while(lastNode->next!=NULL)
			lastNode=lastNode->next;
		lastNode->next=temp;
		temp->prev=lastNode;
	}
}
void remov(int x){
	NODE temp=first;
	if(first==NULL){
		printf("List is empty\n");
		return;
	}
	while(temp!=NULL && temp->data!=x)
		temp=temp->next;
if(temp==NULL)
	{
		printf("%d not found\n",x);
		return;
	}
	if(first==temp)
		first=temp->next;
	if(temp->next!=NULL)
		temp->next->prev=temp->prev;
	if(temp->prev!=NULL)
		temp->prev->next=temp->next;
	free(temp);
}
void display(){
	if(first==NULL)
		printf("Double Linked List is empty.\n");
	else{
		NODE lastNode=first;
		while(lastNode!=NULL){
			printf("%d\t",lastNode->data);
			lastNode=lastNode->next;
		}
		printf("\n");
	}
}
void reverse(){
	NODE temp=NULL, current=first;
